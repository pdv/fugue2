{:rename-macros {}, :renames {}, :externs {console {log {}}, document {getElementById {}}, Object {addEventListener {}}}, :use-macros {}, :excludes #{}, :name fugue2.core, :imports nil, :requires {a fugue2.audio, fugue2.audio fugue2.audio}, :cljs.spec/speced-vars [], :uses nil, :defs {start {:protocol-inline nil, :meta {:file "/Users/pdv/fugue2/src/fugue2/core.cljs", :line 6, :column 7, :end-line 6, :end-column 12, :arglists (quote ([]))}, :name fugue2.core/start, :variadic false, :file "src/fugue2/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, stop {:protocol-inline nil, :meta {:file "/Users/pdv/fugue2/src/fugue2/core.cljs", :line 13, :column 7, :end-line 13, :end-column 11, :arglists (quote ([]))}, :name fugue2.core/stop, :variadic false, :file "src/fugue2/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros nil, :doc nil}