{:rename-macros {}, :renames {}, :externs {devcards {core {start-devcard-ui!* {}}}}, :use-macros {external-tooling-config figwheel.env-config}, :excludes #{}, :name figwheel.connect, :imports nil, :requires {figwheel.client figwheel.client}, :cljs.spec/speced-vars [], :uses nil, :defs {start {:protocol-inline nil, :meta {:file "/Users/pdv/fugue2/resources/public/js/out/figwheel/connect.cljs", :line 8, :column 16, :end-line 8, :end-column 21, :export true, :arglists (quote ([]))}, :name figwheel.connect/start, :variadic false, :file "resources/public/js/out/figwheel/connect.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {figwheel.env-config figwheel.env-config}, :cljs.analyzer/constants {:seen #{:build-id :websocket-url :devcards}, :order [:build-id :websocket-url :devcards]}, :doc nil}